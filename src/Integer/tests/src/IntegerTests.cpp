#include <gtest/gtest.h>#include <Bnum/Integer.hpp>TEST ( Integer , DoesNotThrowWhenBeingDefaultConstructed ){    ASSERT_NO_THROW(Bnum::Integer());}TEST ( Integer , DoesNotThrowWhenBeingConstructedFromStringOfNumerics ){    ASSERT_NO_THROW(Bnum::Integer("42"));}TEST ( Integer , ThrowsWhenBeingConstructedFromStringOfLetters ){    ASSERT_THROW(Bnum::Integer("abc"),int);}TEST ( IntegerConstructedFromStringOneTwoThree , ConvertsToBuiltInIntegerOneHundredAndThree ){    const Bnum::Integer bnumInteger("123");    const int buildInIntegerActual = bnumInteger.toInt();    const int builtInIntegerExpected = 123;    ASSERT_EQ(builtInIntegerExpected,buildInIntegerActual);}int main ( int argc , char** argv ){    ::testing::InitGoogleTest(&argc, argv);    return RUN_ALL_TESTS();}